diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 954d5e1d..64834ee2 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -80,6 +80,7 @@ endif()
 
 if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wconversion -Wno-sign-conversion -Wno-shorten-64-to-32 -Wno-undefined-var-template -Werror")
+  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-implicit-int-float-conversion -Wno-string-conversion")
 elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU") # To many superfluous warnings generated with GCC when using -Wconversion (see: https://gcc.gnu.org/bugzilla/show_bug.cgi?id=40752)
   set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Werror")
 endif()
diff --git a/src/random.cpp b/src/random.cpp
index ccc6b223..23597cb3 100644
--- a/src/random.cpp
+++ b/src/random.cpp
@@ -107,11 +107,6 @@ uint64_t get_random_seed(uint64_t seed) {
 #if defined(HAVE_GETRANDOM)
   num_bytes = static_cast<ssize_t>(syscall(SYS_getrandom, &seed, sizeof(seed), GRND_NONBLOCK));
   if (num_bytes < static_cast<ssize_t>(sizeof(seed))) {
-    char buf[STRERROR_BUFSIZE_];
-    char* err = STRERROR_R_(errno, buf, sizeof(buf));
-    LOG_WARN("Unable to read %u random bytes (%s): %u read",
-             static_cast<unsigned int>(sizeof(seed)), err, static_cast<unsigned int>(num_bytes));
-  } else {
     readurandom = false;
   }
 #endif // defined(HAVE_GETRANDOM)
